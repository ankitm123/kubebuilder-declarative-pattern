#!/bin/bash

# Copyright 2022 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# Helper script to update golang to latest version

set -o errexit
set -o nounset
set -o pipefail

REPO_ROOT=$(git rev-parse --show-toplevel)
cd ${REPO_ROOT}

# TODO: Should we update to the latest go, or the latest go in a particular minor?
GO_TOOLCHAIN=$(curl https://go.dev/dl/?mode=json | jq -r '[.[] | select(.stable == true)] | .[0].version')
echo "GO_TOOLCHAIN=$GO_TOOLCHAIN"

git switch --force-create codebot-update-golang-version-${GO_TOOLCHAIN}

# GO_VERSION is the GO_TOOLCHAIN without the go prefix
GO_VERSION=${GO_TOOLCHAIN#go}
echo "GO_VERSION=$GO_VERSION"

# Update go.mod files
# Tidy each individual go.mod
for gomod_file in $(find "${REPO_ROOT}" -name "go.mod"); do
    dir=$(dirname ${gomod_file})
    cd "${dir}"
    echo "Updating $gomod_file to toolchain $GO_TOOLCHAIN"
    go mod edit -toolchain=${GO_TOOLCHAIN}
done

# Update Docker images
for dockerfile in $(find "${REPO_ROOT}" -name "Dockerfile*"); do
  echo "Updating Dockerfile $dockerfile to go image $GO_VERSION"
  sed -i -e "s/FROM golang:[0-9.]*/FROM golang:$GO_VERSION/g" $dockerfile
done

if $(git diff --quiet); then
  echo "No changes"
else
  cd ${REPO_ROOT}
  git add .
  git commit -m "codebot: update go to ${GO_VERSION}"
fi
